@model TennisSim.Models.ViewModels.Draw.DrawViewModel

<link href="~/css/DrawDraw.css" rel="stylesheet" />

@if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
{
    <div class="alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="tournament-draw">
    <div class="tournament-header">
        <div class="header-content">
            <div class="title-section">
                @{
                    string tournamentName = !string.IsNullOrEmpty(Model.TournamentName)
                    ? Model.TournamentName
                    : Model.Draw?.TournamentName ?? "Tournament Not Found";

                    string tournamentType = tournamentName != "Tournament Not Found"
                    ? "Singles Draw"
                    : "Unable to load tournament details";
                }

                <h1>@tournamentName</h1>
                <div class="tournament-meta">
                    <span class="tournament-type">@tournamentType</span>
                </div>
            </div>
        </div>
    </div>

    @if (Model.ShowMessage)
    {
        <div class="draw-message">
            <p>@Model.DrawMessage</p>
        </div>
    }
    else if (Model.IsDrawAvailable && Model.Draw?.Matches?.Any() == true)
    {
        <div class="draw-container">
            @{
                var rounds = Model.Draw.Matches
                .GroupBy(m => m.Round)
                .OrderBy(g => g.Key)
                .ToList();

                int maxRounds = rounds.Max(r => r.Key);

                string GetRoundName(int roundNumber, int totalRounds)
                {
                    return totalRounds switch
                    {
                        7 => roundNumber switch
                        {
                            1 => "First Round",
                            2 => "Second Round",
                            3 => "Third Round",
                            4 => "Fourth Round",
                            5 => "Quarter Finals",
                            6 => "Semi Finals",
                            7 => "Final",
                            _ => $"Round {roundNumber}"
                        },
                        6 => roundNumber switch
                        {
                            1 => "First Round",
                            2 => "Second Round",
                            3 => "Third Round",
                            4 => "Quarter Finals",
                            5 => "Semi Finals",
                            6 => "Final",
                            _ => $"Round {roundNumber}"
                        },
                        5 => roundNumber switch
                        {
                            1 => "First Round",
                            2 => "Second Round",
                            3 => "Quarter Finals",
                            4 => "Semi Finals",
                            5 => "Final",
                            _ => $"Round {roundNumber}"
                        },
                        _ => roundNumber switch
                        {
                            1 => "First Round",
                            _ when roundNumber == totalRounds => "Final",
                            _ when roundNumber == totalRounds - 1 => "Semi Finals",
                            _ when roundNumber == totalRounds - 2 => "Quarter Finals",
                            _ => $"Round {roundNumber}"
                        }
                    };
                }

                string GetSeedDisplay(int? seedNumber)
                {
                    return seedNumber?.ToString() ?? "";
                }
            }

            @foreach (var round in rounds)
            {
                <div class="round">
                    <div class="round-header">
                        <h2>@GetRoundName(round.Key, maxRounds)</h2>
                    </div>

                    <div class="matches">
                        @foreach (var match in round.OrderBy(m => m.MatchNumber))
                        {
                            <div class="match">
                                <div class="match-number">@match.MatchNumber</div>
                                <div class="match-players">
                                    <div class="player @(match.WinnerName == match.Player1Name ? "winner" : "")">
                                        <div class="player-info">
                                            <div class="seed-placeholder">@GetSeedDisplay(match.Player1SeedNumber)</div>
                                            <div class="name @(string.IsNullOrEmpty(match.Player1Name) ? "tbd" : "")">
                                                @(string.IsNullOrEmpty(match.Player1Name) ? "To Be Decided" : match.Player1Name)
                                            </div>
                                        </div>
                                    </div>

                                    <div class="player @(match.Player2Name == "BYE" ? "bye" : "") @(match.WinnerName == match.Player2Name ? "winner" : "")">
                                        <div class="player-info">
                                            <div class="seed-placeholder">@GetSeedDisplay(match.Player2SeedNumber)</div>
                                            <div class="name @(string.IsNullOrEmpty(match.Player2Name) ? "tbd" : "")">
                                                @if (match.Player2Name == "BYE")
                                                {
                                                    @match.Player2Name
                                                }
                                                else if (string.IsNullOrEmpty(match.Player2Name))
                                                {
                                                    @:To Be Decided
                                                }
                                                else
                                                {
                                                    @match.Player2Name
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-draw">
            <p>The draw for this tournament is not yet available or the tournament details could not be loaded.</p>
        </div>
    }
</div>